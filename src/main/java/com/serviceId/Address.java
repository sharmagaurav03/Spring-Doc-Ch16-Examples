package com.serviceId;
// Generated 4 Jun, 2014 11:33:29 AM by Hibernate Tools 4.3.1


import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Address generated by hbm2java
 */
//@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = As.PROPERTY, property = "@class")
@Entity
@Table(name="address"
)
public class Address implements java.io.Serializable {


     private Long pId;
     private Customer customer;
     private String city;
     private String country;
     private String street;
     private Set<Orders> ordersesForShippingAddressId = new HashSet<Orders>(0);
     private Set<Orders> ordersesForBillingAddressId = new HashSet<Orders>(0);

    public Address() {
    }

    public Address(Customer customer, String city, String country, String street, Set<Orders> ordersesForShippingAddressId, Set<Orders> ordersesForBillingAddressId) {
       this.customer = customer;
       this.city = city;
       this.country = country;
       this.street = street;
       this.ordersesForShippingAddressId = ordersesForShippingAddressId;
       this.ordersesForBillingAddressId = ordersesForBillingAddressId;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Long getPId() {
        return this.pId;
    }
    
    public void setPId(Long id) {
        this.pId = id;
    }

    @JsonIgnore
    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="customer_id")
    public Customer getCustomer() {
        return this.customer;
    }
    
    public void setCustomer(Customer customer) {
        this.customer = customer;
    }

    
    @Column(name="city")
    public String getCity() {
        return this.city;
    }
    
    public void setCity(String city) {
        this.city = city;
    }

    
    @Column(name="country")
    public String getCountry() {
        return this.country;
    }
    
    public void setCountry(String country) {
        this.country = country;
    }

    
    @Column(name="street")
    public String getStreet() {
        return this.street;
    }
    
    public void setStreet(String street) {
        this.street = street;
    }
@JsonIgnore
@OneToMany(fetch=FetchType.EAGER, mappedBy="addressByShippingAddressId")
    public Set<Orders> getOrdersesForShippingAddressId() {
        return this.ordersesForShippingAddressId;
    }
    
    public void setOrdersesForShippingAddressId(Set<Orders> ordersesForShippingAddressId) {
        this.ordersesForShippingAddressId = ordersesForShippingAddressId;
    }

    @JsonIgnore
@OneToMany(fetch=FetchType.EAGER, mappedBy="addressByBillingAddressId")
    public Set<Orders> getOrdersesForBillingAddressId() {
        return this.ordersesForBillingAddressId;
    }
    
    public void setOrdersesForBillingAddressId(Set<Orders> ordersesForBillingAddressId) {
        this.ordersesForBillingAddressId = ordersesForBillingAddressId;
    }

}



<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd http://www.springframework.org/schema/mvc   http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<mvc:annotation-driven />
	<context:component-scan
		base-package="com.serviceId.controller,com.serviceId.service ,com.serviceId.repository" />
	<!-- MVC Controller Interceptor example Start -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.spring.interceptor.TestRequestInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	<!-- MVC Controller Interceptor example End -->
	<!-- MVC Exception Handler Resolver Example Start -->
	<bean id="handlerExceptionResolver"
		class="com.wavemaker.runtime.data.exception.WMHandlerExceptionResolver" />
	<!-- MVC Exception Handler Resolver Example End -->
	<!-- MVC Static resource handling start This also contains example of reading 
		property from property file using Spring EL(expression language) -->
	<util:properties id="applicationProps" location="classpath:application.properties" />
	<mvc:resources
		mapping="/resources-#{applicationProps['application.version']}/**"
		location="/WEB-INF/public-resources/" cache-period="31556926" />
	<!-- This is also working, kept above because it also contains util: and 
		spring el <mvc:resources mapping="/resources/**" location="/WEB-INF/public-resources/" 
		cache-period="31556926"/> -->
	<!-- MVC Static resource handling end -->

	<mvc:default-servlet-handler />


	<bean id="serviceIdDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/criteria"></property>
		<property name="username" value="root"></property>
		<property name="password" value="administrator"></property>
	</bean>

	<bean id="serviceIdSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="serviceIdDataSource" />
		<property name="packagesToScan" value="com.serviceId" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>



	<bean id="serviceIdHibernateTransactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="serviceIdSessionFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="serviceIdHibernateTransactionManager" />


	<bean id="template" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="serviceIdSessionFactory" />
	</bean>
	<bean id="addressRepository" class="com.serviceId.repository.AddressRepository">
		<property name="template" ref="template" />
	</bean>
	<bean id="customerRepository" class="com.serviceId.repository.CustomerRepository">
		<property name="template" ref="template" />
	</bean>
	<bean id="lineitemRepository" class="com.serviceId.repository.LineitemRepository">
		<property name="template" ref="template" />
	</bean>
	<bean id="ordersRepository" class="com.serviceId.repository.OrdersRepository">
		<property name="template" ref="template" />
	</bean>
	<bean id="personRepository" class="com.serviceId.repository.PersonRepository">
		<property name="template" ref="template" />
	</bean>
	<bean id="productRepository" class="com.serviceId.repository.ProductRepository">
		<property name="template" ref="template" />
	</bean>

	<!-- MVC 3 View Controller Example start -->

	<mvc:view-controller path="/" view-name="welcome" />
	<!-- <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="prefix" value="/WEB-INF/views/" /> <property name="suffix" 
		value=".jsp" /> </bean> -->

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- MVC 3 View Controller Example End -->



	<!-- <bean id="personService" class="com.serviceId.service.PersonServiceImpl"/> 
		<bean id="customerService" class="com.serviceId.service.CustomerServiceImpl"/> 
		<bean id="addressService" class="com.serviceId.service.AddressServiceImpl"/> -->

</beans>